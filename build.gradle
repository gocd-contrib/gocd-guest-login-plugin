/*
 * Copyright 2022 Thoughtworks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'java'
}
apply from: "https://raw.githubusercontent.com/gocd/gocd-plugin-gradle-task-helpers/master/helper.gradle?_=${(int) (new Date().toInstant().epochSecond / 60)}"

gocdPlugin {
    id = 'cd.go.contrib.authorization.guest'
    pluginVersion = '3.0.0'
    goCdVersion = '22.1.0'
    name = 'Guest Login Plugin'
    description = 'Guest Login Plugin for GoCD'
    vendorName = 'Thoughtworks, Inc.'
    vendorUrl = 'https://github.com/gocd-contrib/gocd-guest-login-plugin'

    githubRepo {
        owner = System.getenv('GITHUB_USER') ?: 'bob'
        repo = 'gocd-guest-login-plugin'
        token = System.getenv('GITHUB_TOKEN') ?: 'bad-token'
    }

    pluginProject = project

    prerelease = !"No".equalsIgnoreCase(System.getenv('PRERELEASE'))
    prereleaseDryrun = !"Yes".equalsIgnoreCase(System.getenv('PRERELEASE'))
    assetsToRelease = [project.tasks.jar]
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile).configureEach {
    options.release = 17
}

allprojects {
    group = 'cd.go.contrib'
    version = gocdPlugin.fullVersion(project)
}

repositories {
    mavenCentral()
}

ext {
    deps = [
        gocdPluginApi: 'cd.go.plugin:go-plugin-api:25.3.0',
    ]

    versions = project.ext.deps.collectEntries { lib, libGav -> [lib, libGav.split(':').last()] }
}

dependencies {
    compileOnly project.deps.gocdPluginApi
    implementation 'com.google.code.gson:gson:2.13.2'

    testImplementation platform('org.junit:junit-bom:6.0.0')
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.mockito:mockito-core:5.20.0'
    testImplementation 'org.hamcrest:hamcrest:3.0'
    testImplementation "cd.go.plugin:go-plugin-api:${project.versions.gocdPluginApi}"
    testImplementation 'org.skyscreamer:jsonassert:1.5.3'
}

test {
    useJUnitPlatform()
}

jar {
    from(configurations.runtimeClasspath) {
        into "lib/"
    }
}
